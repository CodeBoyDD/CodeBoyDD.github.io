"use strict";(self.webpackChunkoh_my_site=self.webpackChunkoh_my_site||[]).push([[420],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,a(a({ref:t},c),{},{components:n})):r.createElement(h,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9291:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const i={},a="WindowsTermial SSH \u514d\u5bc6\u767b\u5f55",l={unversionedId:"Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55",id:"Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55",title:"WindowsTermial SSH \u514d\u5bc6\u767b\u5f55",description:"Windows \u7aef",source:"@site/docs/Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55.md",sourceDirName:"Windows",slug:"/Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55",permalink:"/Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55",draft:!1,editUrl:"https://github.com/CodeBoyDD/CodeBoyDD.github.io/tree/master/docs/Windows/WindowsTermial \u5b9e\u73b0 SSH \u514d\u5bc6\u767b\u5f55.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WSL\u4e0b\u5b89\u88c5\u548c\u914d\u7f6e ArchLinux",permalink:"/Windows/WSL \u4e0b\u5b89\u88c5\u548c\u914d\u7f6e ArchLinux"}},s={},u=[{value:"Windows \u7aef",id:"windows-\u7aef",level:3},{value:"Linux \u7aef",id:"linux-\u7aef",level:3}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"windowstermial-ssh-\u514d\u5bc6\u767b\u5f55"},"WindowsTermial SSH \u514d\u5bc6\u767b\u5f55"),(0,o.kt)("h3",{id:"windows-\u7aef"},"Windows \u7aef"),(0,o.kt)("p",null,"\u751f\u6210\u516c\u79c1\u94a5"),(0,o.kt)("p",null,"\u6587\u4ef6\u8def\u5f84: $HOME/.ssh/"),(0,o.kt)("p",null,"\u516c\u94a5: id_rsa_pub"),(0,o.kt)("p",null,"\u79c1\u94a5: id_rsa"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"ssh-keygen\n")),(0,o.kt)("p",null,"\u4e0a\u4f20\u5230 Linux \u7aef\u7684 ~/.ssh/ \u5e76\u4fee\u6539\u540d\u79f0\u4e3a authorized_keys"),(0,o.kt)("p",null,"\u4fee\u6539\u6743\u9650"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"chmod 600 ~/.ssh/authorized_keys\n")),(0,o.kt)("h3",{id:"linux-\u7aef"},"Linux \u7aef"),(0,o.kt)("p",null,"\u4fee\u6539 /etc/ssh_config \u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"vim /etc/ssh_config\n")),(0,o.kt)("p",null,"\u53d6\u6d88\u6ce8\u91ca"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# \u542f\u7528\u516c\u94a5\u94fe\u63a5\nPubkeyAuthentication yes\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile .ssh/authorized_keys\n")),(0,o.kt)("p",null,"\u91cd\u542f SSH \u670d\u52a1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"service sshd restart\n")))}p.isMDXComponent=!0}}]);